#!/usr/bin/env php
<?php

$DVC_VERSION = '1.0.2';

// Optional ASCII splash
echo <<<ASCII
  _____    ___    ___  ______ 
 |   _  \  \  \  /  / |   ___\
 |  | |  |  \  \/  /  |  |
 |  |_|  |   \    /   |  |___ 
 |______/     \__/    |______/
  ____  _   _ ____      _____                                          _                                          
 |  _ \| | | |  _ \    |  _ _|_  __ _ _ __ ___   ___ _     __ ___  _ _| | __
 | |_) | |_| | |_) |   | |_| '_`/ _` | '_ ` _ \ / _ \ \   / // _ \| '_` |/ /
 |  __/|  _  |  __/    |  _| | | (_| | | | | | |  __|\ `^' /| (_) | | |  < 
 |_|   |_| |_|_|       |_| |_|  \__,_|_| |_| |_|\___| \_^_/  \___/|_| |_|\_\ ...

DVC CLI â€” v $DVC_VERSION

ASCII;


// Parse arguments
$args = $argv;
array_shift($args); // remove script name

$command = $args[0] ?? null;
$port = 1265;

final class utility {

  public static function checkDirectories($directories) {
    foreach ($directories as $dir) {
      if (!is_dir($dir)) {
        mkdir($dir, 0777, true);
        echo "Created directory: $dir\n";
      }
    }
  }

  public static function checkFiles($files) {

    foreach ($files as $destination => $source) {
      if (!file_exists($destination)) {

        if (file_exists($source)) {

          copy($source, $destination);
          echo "Copied $source to $destination\n";
        } else {

          echo "Source file not found: $source\n";
        }
      } else {

        echo "File already exists: $destination\n";
      }
    }
  }
  public static function checkNamespace($files, $name) {

    foreach ($files as $destination => $source) {

      if (file_exists($destination)) {

        $content = file_get_contents($destination);
        $newContent = str_replace('namespace example;', 'namespace ' . $name . ';', $content);
        file_put_contents($destination, $newContent);
        echo "Updated namespace in: $destination\n";
      } else {

        echo "File not found: $destination\n";
      }
    }
  }
}


switch ($command) {
  case 'serve':

    if (is_dir('public')) {

      printf("Starting local dev server at http://localhost:%s...\n", $port);
      chdir( 'public');
      passthru(sprintf('php -S 0.0.0.0:%s _mvp.php', $port));
    } elseif (file_exists('tests/www/_mvp.php')) {

      printf("Starting local dev server at http://localhost:%s...\n", $port);
      chdir('tests/www');
      passthru(sprintf('php -S 0.0.0.0:%s _mvp.php', $port));
    } elseif (file_exists('vendor/bravedave/dvc/tests/www/_mvp.php')) {

      echo "\n\napplication not found \n";
      printf("to setup the default application type php %s make:application\n", __FILE__);
    }
    break;

  case 'make::application':
    /**
     * ensure the default folder exist, and the default files exist ...
     */

    $directories = [
      'src/app',
      'src/controller',
      'public',
    ];

    $files = [
      'public/.htaccess' => 'vendor/bravedave/dvc/tests/www/.htaccess',
      'public/_mvp.php' => 'vendor/bravedave/dvc/tests/www/_mvp.php',
      'src/app/application.php' => 'vendor/bravedave/dvc/tests/app/application.php',
      'README.md' => 'vendor/bravedave/dvc/src/example/README.md',
    ];

    utility::checkDirectories($directories);  // Create directories if they don't exist
    utility::checkFiles($files);  // Copy files if they don't exist

    echo "Default application setup complete.\n";
    printf("to run the application type php %s server\n", __FILE__);
    break;

  case 'make::module':

    $name = $args[1] ?? null;
    if (!$name) {
      printf("\n\nUsage: php %s make:module <Name>\n\n\n", __FILE__);
      exit(1);
    }

    // ensure name is valid
    if (!preg_match('/^[a-zA-Z0-9_]+$/', $name)) {
      printf("Invalid module name: %s\n", $name);
      exit(1);
    }

    $directories = [
      'src/app/' . $name,
      'src/app/' . $name . '/views',
      'src/app/' . $name . '/dao',
      'src/app/' . $name . '/dao/db',
      'src/app/' . $name . '/dao/dto',
      'src/controller'
    ];

    $files = [
      'src/app/' . $name . '/config.php' => 'vendor/bravedave/dvc/src/example/config.php',
      'src/app/' . $name . '/controller.php' => 'vendor/bravedave/dvc/src/example/controller.php',
      'src/app/' . $name . '/views/index.php' => 'vendor/bravedave/dvc/src/example/views/index.php'
    ];

    utility::checkDirectories($directories);  // Create directories if they don't exist
    utility::checkFiles($files);  // Copy files if they don't exist
    utility::checkNamespace($files, $name);  // Copy files if they don't exist

    $file = 'src/controller/' . $name . '.php';
    if ( !file_exists($file)) {

      $content = "<?php\n// file: $file\nclass $name extends $name\controller {}\n";
      file_put_contents($file, $content);
      echo "Created controller: $file\n";
    } else {

      echo "Controller already exists: $file\n";
    }
    
    echo "finished creating module: $file\n";
    break;

  default:
    echo "Available commands:\n";
    echo "  serve                Start the dev server\n";
    if (!file_exists('public/_mvp.php')) {

      echo "  make::application     Create the default application\n";
    }
    echo "  make::module Name Generate a module\n";
    echo "  version              Show version\n";
    break;
}
